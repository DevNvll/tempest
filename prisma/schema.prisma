datasource sqlite {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String
  email     String   @unique
  Folder    Folder[]
  File      File[]
  Shared    Shared[]
}

model Folder {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  parent    Folder?  @relation("FolderToFolder", fields: [parentId], references: [id])
  parentId  String?
  Folder    Folder[] @relation("FolderToFolder")
  File      File[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  isDeleted Boolean  @default(false)
  isRoot    Boolean  @default(false)
  shares    Shared?  @relation(fields: [sharedId], references: [id])
  sharedId  String?
}

model File {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  parent      Folder?  @relation(fields: [parentId], references: [id])
  parentId    String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  storageKey  String
  extension   String
  mimeType    String
  mimeSubtype String
  isDeleted   Boolean  @default(false)
  Shared      Shared?  @relation(fields: [sharedId], references: [id])
  sharedId    String?
  size        Float    @default(0)
}

model Shared {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  folder    Folder?
  file      File?
  code      String    @unique @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  type      ShareType
}

enum ShareType {
  File
  Folder
}
